#!/usr/bin/env python3
from pydub import AudioSegment
from pathlib import Path
import click


@click.command()
@click.argument("source", type=click.Path(exists=True))
@click.option(
    "-n", "repetitions", type=click.INT, default=20, help="number of repetitions"
)
@click.option(
    "--format",
    "format_",
    type=click.Choice(["wav", "ogg"]),
    help="default to the same format as the input file",
)
@click.option(
    "--dir",
    "destination_dir",
    type=click.Path(exists=True, file_okay=False),
    help="destination directory. Default is the same dir as the input file.",
)
def loop_command(*args, **kwargs):
    """Loop a sound file on itself"""

    loop(*args, **kwargs)


def loop(source, repetitions, format_, destination_dir):
    clip = AudioSegment.from_file(source)

    print(f"repeat segment {repetitions} times")
    clip = clip * repetitions

    source_path = Path(source)
    source_format = source_path.suffix[1:]
    format_ = format_ or source_format
    dest_name = source_path.stem + f"__loop{repetitions}x"
    destination_dir = destination_dir or source_path.parent
    dest = (Path(destination_dir) / dest_name).with_suffix("." + format_)
    print(f"export to: {dest}")
    clip.export(dest, format=format_)


if __name__ == "__main__":
    loop_command()
